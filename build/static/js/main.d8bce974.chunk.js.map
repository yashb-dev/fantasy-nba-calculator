{"version":3,"sources":["serviceWorker.js","components/table.jsx","main.js","about.js","customTable.js","custom.js","components/navBar.jsx","index.js"],"names":["Boolean","window","location","hostname","match","table","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","_this2","console","log","query","fetch","then","res","json","myJson","setState","JSON","parse","react_default","a","createElement","style","marginTop","marginLeft","marginRight","lib","isKey","dataField","Component","App","className","marginBottom","table_table","about","customTable","custom","W","L","MIN","FG_PCT","FG3_PCT","FT_PCT","PTS","REB","AST","STL","BLK","TOV","getTable","bind","assertThisInitialized","ReactDOM","render","customTable_customTable","document","getElementById","type","value","onChange","onClick","navBar","loadMain","loadCustom","loadAbout","mode","main","custom_custom","about_about","href","color","navBar_navBar","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d8bce974.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport 'react-bootstrap-table/css/react-bootstrap-table.css';\r\n\r\nexport default class table extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data:[],\r\n        };\r\n    }  \r\n\r\n    componentDidMount(){\r\n        console.log(this.props.query);\r\n        fetch(this.props.query)\r\n        .then(res => res.json())\r\n        .then(\r\n            (myJson) => {\r\n                console.log(myJson);\r\n                this.setState({\r\n                    data:JSON.parse(myJson)['data']\r\n                });\r\n        })\r\n    }\r\n  render() {\r\n    return (\r\n      <div style={{marginTop:'5%', marginLeft:'10%', marginRight:'10%'}}>\r\n        <BootstrapTable data={this.state.data}>\r\n            <TableHeaderColumn isKey dataField='PLAYER_NAME'>\r\n            Player Name\r\n            </TableHeaderColumn>\r\n            <TableHeaderColumn dataField='SCORES'>\r\n            Fantasy Score\r\n            </TableHeaderColumn>\r\n        </BootstrapTable>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Table from \"./components/table\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"text-center text-secondary\" style={{ marginTop: \"10%\" }}>\n        <h1 style={{ marginBottom: \"5%\" }}>\n          Welcome to the NBA Fantasy Ranking Calculator\n        </h1>\n        <div style={{ marginTop: \"5%\", marginLeft: \"25%\", marginRight: \"25%\" }}>\n          <Table query=\"http://localhost:5002/rankplayers?mode=official\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\n\r\nexport default class about extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"text-center text-secondary\" style={{ marginTop: \"10%\" }}>\r\n        <h1 style={{ marginBottom: \"5%\" }}>\r\n          Welcome to the NBA Fantasy Ranking Calculator\r\n        </h1>\r\n        <p>\r\n            The official NBA rules for fantasy leagues states the following point allocations: Points(1), Rebounds(1.2), Assists(1.5), Steals(3), Blocks(3), Turnovers(-1).\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Table from './components/table'\r\n\r\nexport default class customTable extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"text-center text-secondary\" style={{ marginTop: \"10%\" }}>\r\n        <h4 style={{ marginBottom: \"5%\" }}>\r\n          Here are your customized rankings!\r\n        </h4>\r\n        <div style={{ marginTop: \"5%\", marginLeft: \"25%\", marginRight: \"25%\" }}>\r\n          <Table query={this.props.query} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport CustomTable from \"./customTable\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport default class custom extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      W: 0,\r\n      L: 0,\r\n      MIN: 0,\r\n      FG_PCT: 0,\r\n      FG3_PCT: 0,\r\n      FT_PCT: 0,\r\n      PTS: 0,\r\n      REB: 0,\r\n      AST: 0,\r\n      STL: 0,\r\n      BLK: 0,\r\n      TOV: 0\r\n    };\r\n    this.getTable = this.getTable.bind(this);\r\n  }\r\n  getTable() {\r\n    var w = \"&W=\" + this.state.W;\r\n    var l = \"&L=\" + this.state.L;\r\n    var m = \"&MIN=\" + this.state.MIN;\r\n    var fg = \"&FG_PCT=\" + this.state.FG_PCT;\r\n    var fg3 = \"&FG3_PCT=\" + this.state.FG3_PCT;\r\n    var ft = \"&FT_PCT=\" + this.state.FT_PCT;\r\n    var pts = \"&PTS=\" + this.state.PTS;\r\n    var reb = \"&REB=\" + this.state.REB;\r\n    var ast = \"&AST=\" + this.state.AST;\r\n    var stl = \"&STL=\" + this.state.STL;\r\n    var blk = \"&BLK=\" + this.state.BLK;\r\n    var tov = \"&TOV=\" + this.state.TOV;\r\n    var query =\r\n      \"http://localhost:5002/rankplayers?mode=custom\" +\r\n      w +\r\n      l +\r\n      m +\r\n      fg +\r\n      fg3 +\r\n      ft +\r\n      pts +\r\n      reb +\r\n      ast +\r\n      stl +\r\n      blk +\r\n      tov;\r\n    console.log(query);\r\n    ReactDOM.render(\r\n      <CustomTable query={query} />,\r\n      document.getElementById(\"table\")\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"text-center text-secondary\" style={{ marginTop: \"10%\" }}>\r\n        <h6>Please select which categories you would like to be included</h6>\r\n        <div className=\"text-left\" style={{ marginLeft: \"25%\" }}>\r\n          <div className=\"checkbox\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                onChange={(this.state.W = !this.state.W)}\r\n              />\r\n              Wins\r\n            </label>\r\n          </div>\r\n          <div className=\"checkbox\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                onChange={(this.state.L = !this.state.L)}\r\n              />\r\n              Losses\r\n            </label>\r\n          </div>\r\n          <div className=\"checkbox\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                onChange={(this.state.MIN = !this.state.MIN)}\r\n              />\r\n              Minuntes Played\r\n            </label>\r\n          </div>\r\n          <div className=\"checkbox\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                onChange={(this.state.FG_PCT = !this.state.FG_PCT)}\r\n              />\r\n              Field Goal %\r\n            </label>\r\n          </div>\r\n          <div className=\"checkbox\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                onChange={(this.state.FG3_PCT = !this.state.FG3_PCT)}\r\n              />\r\n              3-Point %\r\n            </label>\r\n          </div>\r\n          <div className=\"checkbox\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                onChange={(this.state.FT_PCT = !this.state.FT_PCT)}\r\n              />\r\n              Free Throw %\r\n            </label>\r\n          </div>\r\n          <div className=\"checkbox\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                onChange={(this.state.PTS = !this.state.PTS)}\r\n              />\r\n              Points\r\n            </label>\r\n          </div>\r\n          <div className=\"checkbox\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                onChange={(this.state.REB = !this.state.REB)}\r\n              />\r\n              Rebounds\r\n            </label>\r\n          </div>\r\n          <div className=\"checkbox\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                onChange={(this.state.AST = !this.state.AST)}\r\n              />\r\n              Assists\r\n            </label>\r\n          </div>\r\n          <div className=\"checkbox\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                onChange={(this.state.STL = !this.state.STL)}\r\n              />\r\n              Steals\r\n            </label>\r\n          </div>\r\n          <div className=\"checkbox\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                onChange={(this.state.BLK = !this.state.BLK)}\r\n              />\r\n              Blocks\r\n            </label>\r\n          </div>\r\n          <div className=\"checkbox\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                onChange={(this.state.TOV = !this.state.TOV)}\r\n              />\r\n              Turnovers\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <button className=\"btn btn-primary btn-sm\" onClick={this.getTable}>\r\n            {\" \"}\r\n            Submit{\" \"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Main from '../main';\r\nimport ReactDOM from 'react-dom';\r\nimport About from '../about';\r\nimport Custom from '../custom';\r\n\r\nexport default class navBar extends Component {\r\n  loadMain() {\r\n    this.setState({\r\n      mode: \"main\"\r\n    });\r\n  }\r\n  loadCustom() {\r\n    this.setState({\r\n      mode: \"custom\"\r\n    });\r\n  }\r\n  loadAbout() {\r\n    this.setState({\r\n      mode: \"about\"\r\n    });\r\n  }\r\n  componentDidUpdate(){\r\n      if (this.state.mode === 'main'){\r\n        ReactDOM.render(<Main />, document.getElementById('table'));\r\n      }\r\n      if (this.state.mode === 'custom'){\r\n        ReactDOM.render(<Custom />, document.getElementById('table'));\r\n      }\r\n      if (this.state.mode === 'about'){\r\n        ReactDOM.render(<About />, document.getElementById('table'));\r\n      }\r\n  }\r\n  componentDidMount(){\r\n    ReactDOM.render(<Main />, document.getElementById('table'));\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.loadMain = this.loadMain.bind(this);\r\n    this.loadCustom = this.loadCustom.bind(this);\r\n    this.loadAbout = this.loadAbout.bind(this);\r\n    this.state = {\r\n      mode: \"main\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar fixed-top navbar-dark bg-dark\">\r\n        <div className=\"container-fluid justify-content-center\">\r\n          <ul className=\"nav list-inline\">\r\n            <li className=\"btn rounded list-inline-item\">\r\n              <a href=\"#\" style={{ color: \"linen\" }} onClick={this.loadMain}>\r\n                Official Fantasy\r\n              </a>\r\n            </li>\r\n            <li\r\n              className=\"btn rounded list-inline-item\"\r\n              onClick={this.loadCustom}\r\n            >\r\n              <a href=\"#\" style={{ color: \"linen\" }}>\r\n                Custom Fantasy\r\n              </a>\r\n            </li>\r\n            <li\r\n              className=\"btn rounded list-inline-item\"\r\n              onClick={this.loadAbout}\r\n            >\r\n              <a href=\"#\" style={{ color: \"linen\" }}>\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Nav from './components/navBar';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<Nav />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}