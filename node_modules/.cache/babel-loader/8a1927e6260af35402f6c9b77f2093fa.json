{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\Yash\\\\dir\\\\fantasy-nba\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\Yash\\\\dir\\\\fantasy-nba\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\Yash\\\\dir\\\\fantasy-nba\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\Yash\\\\dir\\\\fantasy-nba\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\Yash\\\\dir\\\\fantasy-nba\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\Yash\\\\dir\\\\fantasy-nba\\\\src\\\\components\\\\fetchData.jsx\";\nimport React, { Component } from 'react';\n\nvar fetchData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(fetchData, _Component);\n\n  function fetchData(props) {\n    var _this;\n\n    _classCallCheck(this, fetchData);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(fetchData).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(fetchData, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(this.props.query).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          items: result.items\n        });\n      }, function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n      console.log(items);\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"loading...\");\n      } else {\n        console.log(items);\n      }\n\n      ;\n    }\n  }]);\n\n  return fetchData;\n}(Component);\n\nexport { fetchData as default };","map":{"version":3,"sources":["c:\\Users\\Yash\\dir\\fantasy-nba\\src\\components\\fetchData.jsx"],"names":["React","Component","fetchData","props","state","error","isLoaded","items","fetch","query","then","res","json","result","setState","console","log","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,S;;;;;AACjB,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAFc;AAOjB;;;;wCAEkB;AAAA;;AACfC,MAAAA,KAAK,CAAC,KAAKL,KAAL,CAAWM,KAAZ,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAGI,UAACG,MAAD,EAAY;AACR,QAAA,MAAI,CAACC,QAAL,CAAc;AACVR,UAAAA,QAAQ,EAAC,IADC;AAEVC,UAAAA,KAAK,EAACM,MAAM,CAACN;AAFH,SAAd;AAIH,OARL,EASI,UAACF,KAAD,EAAW;AACP,QAAA,MAAI,CAACS,QAAL,CAAc;AACVR,UAAAA,QAAQ,EAAC,IADC;AAEVD,UAAAA,KAAK,EAALA;AAFU,SAAd;AAIH,OAdL;AAgBH;;;6BACM;AAAA,wBAC0B,KAAKD,KAD/B;AAAA,UACAC,KADA,eACAA,KADA;AAAA,UACOC,QADP,eACOA,QADP;AAAA,UACiBC,KADjB,eACiBA,KADjB;AAEPQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;;AACA,UAAIF,KAAJ,EAAW;AACP,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaA,KAAK,CAACY,OAAnB,CAAP;AACH,OAFD,MAEO,IAAI,CAAEX,QAAN,EAAgB;AACnB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH,OAFM,MAEA;AACHS,QAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACH;;AAAA;AACF;;;;EAtCoCN,S;;SAAlBC,S","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class fetchData extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(this.props.query)\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded:true,\r\n                    items:result.items\r\n                });\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded:true,\r\n                    error\r\n                })\r\n            }\r\n        )\r\n    }\r\n  render() {\r\n    const {error, isLoaded, items} = this.state;\r\n    console.log(items);\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>\r\n    } else if (!(isLoaded)){\r\n        return <div>loading...</div>\r\n    } else {\r\n        console.log(items);\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}